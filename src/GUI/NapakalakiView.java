/**
 *
 * @author jotaelediaz
 */

package GUI;

import java.util.ArrayList;
import napakalaki.CombatResult;
import napakalaki.Napakalaki;
import napakalaki.Player;
import napakalaki.Treasure;


public class NapakalakiView extends javax.swing.JFrame {
   

    public Napakalaki napakalakiModel;
    public Player PlayerModel;

    
    public void setNapakalaki(Napakalaki v) {
        
        napakalakiModel = v;
        
        playerView.setNapakalaki(napakalakiModel);
        playerView.setPlayer(napakalakiModel.getCurrentPlayer());
        monsterView.setMonster(napakalakiModel.getCurrentMonster());
        
        monsterView.setVisible(false); //Para que el jugador no vea al monstruo al principio
        
        
        repaint();
    }
    
    /**
     * Creates new form NapakalakiView
     */
    public NapakalakiView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playerView = new GUI.PlayerView();
        monsterView = new GUI.MonsterView();
        meetMonsterButton = new javax.swing.JButton();
        CombatButton = new javax.swing.JButton();
        NextTurnButton = new javax.swing.JButton();
        LCombatResult = new javax.swing.JLabel();
        GameTitleL = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        PanelMonstruoOculto = new javax.swing.JPanel();
        QuestionOculto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Napakalaki");
        setAlwaysOnTop(true);
        setFont(new java.awt.Font("Trebuchet MS", 0, 10)); // NOI18N
        setMaximumSize(new java.awt.Dimension(1200, 750));
        setMinimumSize(new java.awt.Dimension(1200, 750));
        setSize(new java.awt.Dimension(1200, 750));
        getContentPane().setLayout(null);

        playerView.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Jugador Actual", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 16))); // NOI18N
        playerView.setAlignmentX(0.9F);
        playerView.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        getContentPane().add(playerView);
        playerView.setBounds(10, 80, 650, 550);

        monsterView.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Monstruo Actual", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 16))); // NOI18N
        monsterView.setPreferredSize(new java.awt.Dimension(520, 520));
        getContentPane().add(monsterView);
        monsterView.setBounds(680, 80, 510, 550);

        meetMonsterButton.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        meetMonsterButton.setText("DESCUBRIR EL MONSTRUO");
        meetMonsterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meetMonsterButtonActionPerformed(evt);
            }
        });
        getContentPane().add(meetMonsterButton);
        meetMonsterButton.setBounds(10, 640, 360, 29);

        CombatButton.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        CombatButton.setText("¡ ¡ C O M B A T I R ! !");
        CombatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CombatButtonActionPerformed(evt);
            }
        });
        getContentPane().add(CombatButton);
        CombatButton.setBounds(370, 640, 380, 29);

        NextTurnButton.setFont(new java.awt.Font("Ubuntu", 0, 13)); // NOI18N
        NextTurnButton.setText("SIGUIENTE TURNO");
        NextTurnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextTurnButtonActionPerformed(evt);
            }
        });
        getContentPane().add(NextTurnButton);
        NextTurnButton.setBounds(756, 640, 430, 29);

        LCombatResult.setFont(new java.awt.Font("Ubuntu", 1, 12)); // NOI18N
        LCombatResult.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LCombatResult.setText("Resultado combate");
        getContentPane().add(LCombatResult);
        LCombatResult.setBounds(10, 690, 1180, 30);

        GameTitleL.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        GameTitleL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        GameTitleL.setText("Napakalaki");
        GameTitleL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(GameTitleL);
        GameTitleL.setBounds(10, 20, 1180, 40);

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setMaximumSize(new java.awt.Dimension(1059, 32767));
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(10, 680, 1180, 10);

        PanelMonstruoOculto.setBackground(new java.awt.Color(240, 240, 240));
        PanelMonstruoOculto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Monstruo Actual", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 16))); // NOI18N
        PanelMonstruoOculto.setLayout(null);

        QuestionOculto.setFont(new java.awt.Font("Ubuntu", 1, 168)); // NOI18N
        QuestionOculto.setForeground(new java.awt.Color(201, 201, 201));
        QuestionOculto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        QuestionOculto.setText("?");
        PanelMonstruoOculto.add(QuestionOculto);
        QuestionOculto.setBounds(70, 70, 350, 410);

        getContentPane().add(PanelMonstruoOculto);
        PanelMonstruoOculto.setBounds(680, 80, 510, 550);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NextTurnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextTurnButtonActionPerformed
        
       
        
        
        if (napakalakiModel.nextTurn() ) {

                playerView.setPlayer(napakalakiModel.getCurrentPlayer());
                monsterView.setMonster(napakalakiModel.getCurrentMonster());

                //Ajustamos botones
                monsterView.setVisible(false);
                meetMonsterButton.setEnabled(true);
                NextTurnButton.setEnabled(false);        
                playerView.activateBuyLevelsButton();
                playerView.activateMakeVisibleButton();
                LCombatResult.setText(" ");
                playerView.cleanInfoJugador();
                
            
            
        } else {
            
            //Obligamos al jugador a descartarse de tesoros ocultos si tiene más de 4
            ArrayList<Treasure> aux = playerView.playerModel.getHiddenTreasures();
                    
            int numOcultos = aux.size();
            
            
            if(numOcultos > 4) { LCombatResult.setText("No puedes tener más de 4 tesoros en tu mano. Descártate hasta tener un máximo de 4.");    
            } else { LCombatResult.setText("¡NO PUEDES PASAR EL TURNO AÚN! Antes debes cumplir el mal rollo por completo."); }
            
        }
        
        repaint();
    }//GEN-LAST:event_NextTurnButtonActionPerformed

    private void meetMonsterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meetMonsterButtonActionPerformed
       
        monsterView.setVisible(true);
        
        CombatButton.setEnabled(true);
        meetMonsterButton.setEnabled(false);
        
        //Quitamos los botones que permiten comprar niveles y equipar tesoros cuando el monstruo ha aparecido
        playerView.deactivateBuyLevelsButton();
        playerView.deactivateMakeVisibleButton();      
    }//GEN-LAST:event_meetMonsterButtonActionPerformed

    private void CombatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CombatButtonActionPerformed
        
        CombatResult resultado = napakalakiModel.developCombat();
        
        switch (resultado) {
            
            case Lose:                
                LCombatResult.setText("¡Has perdido contra el monstruo! Ahora debes cumplir el mal rollo antes de poder pasar el turno.");
            
                //Si el jugador no tiene que cumplir ningún mal rollo, habilitamos el botón para que pueda pasar turno.
                if ( (napakalakiModel.getCurrentPlayer().getPendingBadConsequence().isEmpty() ) == true || 
                (napakalakiModel.getCurrentPlayer().getPendingBadConsequence()) == null ) {  
                    LCombatResult.setText("¡Has perdido contra el monstruo! :(");
                } 
           
                NextTurnButton.setEnabled(true);               
            break;
            
                
            case LoseAndDie: 
                LCombatResult.setText("Has perdido contra el monstruo. Estás muerto.");
                NextTurnButton.setEnabled(true);           
            break;
               
                
            case LoseAndEscape:
                LCombatResult.setText("Has perdido contra el monstruo, ¡Pero has conseguido escapar!");
                NextTurnButton.setEnabled(true);          
            break;
              
                
            case Win:
                LCombatResult.setText("¡Genial, has vencido al monstruo!");
                NextTurnButton.setEnabled(true);
            break;
                
                
            case WinAndWinGame:
                LCombatResult.setText("Has vencido al monstruo y... ¡HAS GANADO LA PARTIDA! :D");
            break;
                
                
            case LoseAndConvert:
                LCombatResult.setText("Has perdido..., ¡Pero te acabas de convertir en Sectario!");
                NextTurnButton.setEnabled(true);
            break;
                
        }

        
        CombatButton.setEnabled(false);
        playerView.setPlayer(napakalakiModel.getCurrentPlayer());
        
        repaint();
    }//GEN-LAST:event_CombatButtonActionPerformed

    
   
    
    
    /**
     * @param args the command line arguments
     */
    public void showView() {
        this.setVisible(true);
        CombatButton.setEnabled(false);
        NextTurnButton.setEnabled(false);
       
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CombatButton;
    private javax.swing.JLabel GameTitleL;
    private javax.swing.JLabel LCombatResult;
    private javax.swing.JButton NextTurnButton;
    private javax.swing.JPanel PanelMonstruoOculto;
    private javax.swing.JLabel QuestionOculto;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton meetMonsterButton;
    private GUI.MonsterView monsterView;
    private GUI.PlayerView playerView;
    // End of variables declaration//GEN-END:variables
}
